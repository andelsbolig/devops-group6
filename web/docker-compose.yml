services:
  # Development with volume mounting (traditional approach)
  web:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - ./src:/app/src
      - ./public:/app/public
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - REACT_APP_ENV=development
      - WATCHPACK_POLLING=true
    stdin_open: true
    tty: true

  # Development with Docker Watch (modern approach)
  web-watch:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_ENV=development
      - FAST_REFRESH=true
    stdin_open: true
    tty: true
    develop:
      watch:
        # Sync source code changes
        - action: sync
          path: ./src
          target: /app/src
          ignore:
            - node_modules/
        # Sync public assets
        - action: sync
          path: ./public
          target: /app/public
        # Rebuild when package.json changes
        - action: rebuild
          path: ./package.json
        # Rebuild when package-lock.json changes  
        - action: rebuild
          path: ./package-lock.json

  web-prod:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    profiles:
      - prod